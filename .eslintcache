[{"D:\\jc14\\FinalProject\\src\\components\\RegistrationStyles.js":"1","D:\\jc14\\FinalProject\\src\\pages\\Product.jsx":"2","D:\\jc14\\FinalProject\\src\\pages\\register.jsx":"3","D:\\jc14\\FinalProject\\src\\reportWebVitals.js":"4","D:\\jc14\\FinalProject\\src\\pages\\login.jsx":"5","D:\\jc14\\FinalProject\\src\\components\\Cards.js":"6","D:\\jc14\\FinalProject\\src\\components\\CardItem.js":"7","D:\\jc14\\FinalProject\\src\\components\\Navbar.js":"8","D:\\jc14\\FinalProject\\src\\redux\\reducers\\authreducers.js":"9","D:\\jc14\\FinalProject\\src\\redux\\reducers\\index.js":"10","D:\\jc14\\FinalProject\\src\\App.js":"11","D:\\jc14\\FinalProject\\src\\components\\HeroSection.js":"12"},{"size":4071,"mtime":1606828952986,"results":"13","hashOfConfig":"14"},{"size":2598,"mtime":1606915239075,"results":"15","hashOfConfig":"14"},{"size":7934,"mtime":1606834021974,"results":"16","hashOfConfig":"14"},{"size":375,"mtime":1606534015074,"results":"17","hashOfConfig":"14"},{"size":3703,"mtime":1606797764333,"results":"18","hashOfConfig":"14"},{"size":1588,"mtime":1606794680329,"results":"19","hashOfConfig":"14"},{"size":663,"mtime":1606794680320,"results":"20","hashOfConfig":"14"},{"size":2301,"mtime":1606797967285,"results":"21","hashOfConfig":"14"},{"size":385,"mtime":1606832168640,"results":"22","hashOfConfig":"14"},{"size":143,"mtime":1606879429894,"results":"23","hashOfConfig":"14"},{"size":633,"mtime":1606810164260,"results":"24","hashOfConfig":"14"},{"size":1016,"mtime":1606795721257,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1f3co4a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\jc14\\FinalProject\\src\\components\\RegistrationStyles.js",[],["55","56"],"D:\\jc14\\FinalProject\\src\\pages\\Product.jsx",["57"],"D:\\jc14\\FinalProject\\src\\pages\\register.jsx",["58","59"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { register } from \"../components/RegistrationStyles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfrim: \"\",\r\n    hidePassword: true,\r\n    error: null,\r\n    errorOpen: false\r\n  };\r\n\r\n  errorClose = e => {\r\n    this.setState({\r\n      errorOpen: false\r\n    });\r\n  };\r\n\r\n  handleChange = name => e => {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  passwordMatch = () => this.state.password === this.state.passwordConfrim;\r\n\r\n  showPassword = () => {\r\n    this.setState(prevState => ({ hidePassword: !prevState.hidePassword }));\r\n  };\r\n\r\n  isValid = () => {\r\n    if (this.state.email === \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  submitRegistration = e => {\r\n    e.preventDefault();\r\n    if (!this.passwordMatch()) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        error: \"Passwords don't match\"\r\n      });\r\n    }\r\n    const newUserCredentials = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      passwordConfrim: this.state.passwordConfrim\r\n    };\r\n    console.log(\"this.props.newUserCredentials\", newUserCredentials);\r\n    //dispath to userActions\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.main}>\r\n        <CssBaseline />\r\n\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.sgnuptext}>\r\n                Drugstore\r\n                <i class=\"fas fa-prescription-bottle-alt\"></i>\r\n            </div>\r\n            <div style={{color:\"#fff\", fontSize:\"20px\", textAlign:\"center\", marginTop:\"20px\", fontFamily:\"inherit\"}}>\r\n                Sign Up to See Our Latest Products and Articles!\r\n            </div>\r\n          {/* <Avatar className={classes.avatar}>\r\n            <PeopleAltIcon className={classes.icon} />\r\n          </Avatar> */}\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={() => this.submitRegistration}\r\n          >\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"email\" className={classes.labels}>\r\n                e-mail\r\n              </InputLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onChange={this.handleChange(\"email\")}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"password\" className={classes.labels}>\r\n                password\r\n              </InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                autoComplete=\"password\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onChange={this.handleChange(\"password\")}\r\n                type={this.state.hidePassword ? \"password\" : \"input\"}\r\n                endAdornment={\r\n                  this.state.hidePassword ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityOffTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  ) : (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  )\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"passwordConfrim\" className={classes.labels}>\r\n                confrim password\r\n              </InputLabel>\r\n              <Input\r\n                name=\"passwordConfrim\"\r\n                autoComplete=\"passwordConfrim\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onClick={this.state.showPassword}\r\n                onChange={this.handleChange(\"passwordConfrim\")}\r\n                type={this.state.hidePassword ? \"password\" : \"input\"}\r\n                endAdornment={\r\n                  this.state.hidePassword ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityOffTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  ) : (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  )\r\n                }\r\n              />\r\n            </FormControl>\r\n            \r\n\r\n            <Button\r\n              disabled={!this.isValid()}\r\n              disableRipple\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              className={classes.button}\r\n              type=\"submit\"\r\n              onClick={this.submitRegistration}\r\n            >\r\n              Join\r\n            </Button>\r\n          </form>\r\n          <Button style={{marginTop:20}} variant='contained' color='primary'>\r\n              <FacebookIcon/>Sign in with Facebook\r\n          </Button>\r\n          {this.state.error ? (\r\n            <Snackbar\r\n              variant=\"error\"\r\n              key={this.state.error}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              }}\r\n              open={this.state.errorOpen}\r\n              onClose={this.errorClose}\r\n              autoHideDuration={3000}\r\n            >\r\n              <SnackbarContent\r\n                className={classes.error}\r\n                message={\r\n                  <div>\r\n                    <span style={{ marginRight: \"8px\" }}>\r\n                      <ErrorIcon fontSize=\"large\" color=\"error\" />\r\n                    </span>\r\n                    <span> {this.state.error} </span>\r\n                  </div>\r\n                }\r\n                action={[\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"close\"\r\n                    onClick={this.errorClose}\r\n                  >\r\n                    <CloseIcon color=\"error\" />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </Snackbar>\r\n          ) : null}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(register)(Registration);\r\n",["60","61"],"D:\\jc14\\FinalProject\\src\\reportWebVitals.js",[],"D:\\jc14\\FinalProject\\src\\pages\\login.jsx",["62","63","64"],"import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { GolfCourse } from '@material-ui/icons';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport Footer from './../components/Footer'\r\nconst LoginScreen=()=>{\r\n    const [values, setValues] = React.useState({\r\n        password:'',\r\n        username:''\r\n    })\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    \r\n    \r\n    return(\r\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n            <div style={{marginTop:100,flexDirection:'column',display:'flex'}}>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">Username</InputLabel>\r\n                    <Input\r\n                    id=\"input-with-icon-adornment\"\r\n                    value={values.username}\r\n                    startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <PersonIcon/>\r\n                    </InputAdornment>\r\n                     }\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">Password</InputLabel>\r\n                    <Input\r\n                            id=\"standard-adornment-password\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            startAdornment={\r\n                                <InputAdornment position='start'>\r\n                                    <LockIcon/>\r\n                                </InputAdornment>\r\n                            }\r\n                            endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                {values.showPassword ? <VisibilityIcon /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                            }\r\n                        />\r\n                </FormControl>\r\n                <Button variant='contained' style={{width:'50%',marginLeft:130,marginTop:20}}>\r\n                    Login\r\n                </Button>\r\n                <Button style={{marginTop:20}} variant='contained' color='primary'>\r\n                    <FacebookIcon/>Sign in with Facebook\r\n                </Button>\r\n\r\n            </div>\r\n            \r\n          \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default LoginScreen","D:\\jc14\\FinalProject\\src\\components\\Cards.js",[],"D:\\jc14\\FinalProject\\src\\components\\CardItem.js",["65"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","D:\\jc14\\FinalProject\\src\\components\\Navbar.js",[],"D:\\jc14\\FinalProject\\src\\redux\\reducers\\authreducers.js",[],"D:\\jc14\\FinalProject\\src\\redux\\reducers\\index.js",[],"D:\\jc14\\FinalProject\\src\\App.js",["66"],"D:\\jc14\\FinalProject\\src\\components\\HeroSection.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":52,"column":22,"nodeType":"73","endLine":52,"endColumn":84},{"ruleId":"74","severity":1,"message":"75","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":21},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","replacedBy":"80"},{"ruleId":"74","severity":1,"message":"81","line":11,"column":9,"nodeType":"76","messageId":"77","endLine":11,"endColumn":24},{"ruleId":"74","severity":1,"message":"82","line":12,"column":10,"nodeType":"76","messageId":"77","endLine":12,"endColumn":20},{"ruleId":"74","severity":1,"message":"83","line":15,"column":8,"nodeType":"76","messageId":"77","endLine":15,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":10,"column":13,"nodeType":"73","endLine":14,"endColumn":15},{"ruleId":"74","severity":1,"message":"83","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":14},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'PeopleAltIcon' is defined but never used.",["86"],["87"],"'FontAwesomeIcon' is defined but never used.","'GolfCourse' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]